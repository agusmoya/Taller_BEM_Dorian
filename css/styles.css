/**
**   BEM: Block Element Modifier ---> BLOQUE ELEMENTO MODIFICADOR
**   
**   Esto nos permitirá organizar el css de forma tal que, al mirar un elemento
**   vamos a saber a qué padre o bloque pertenece. De esta manera podremos mantener los 
**   estilos organizados y escalarlos de manera adecuada.
**   
**   Un BLOQUE: es el elemento contenedor de un conjunto de otros elementos que existen en
**   su interior. Ojo, que para el caso del <nav></nav> no sería un bloque
**   
**   En este caso el <ul></ul> sería un BLOQUE, ya que los <li></li> no pueden funcionar 
**   por separado, auqneu el <ul></ul> llevado a otro sitio seguiría funcionando. 
**   Los <li></li> y los <a></a> son ELEMENTOS.
**   
**   Los MODIFICADORES sirven para que los elementos que necesitan una modificación se
**   declaren de forma clara y así no sobreescribir estilos, es decir, sólo ponemos aquello
**   que se modifica.
**   
**   
** */

* {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: sans-serif;
    background-color: #333;
    color: #fff;
}

.main-nav {
    background-color: rgb(96, 97, 179);
}

.main-menu {
    list-style: none;
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0;
    text-align: center;
    display: flex;
    justify-content: space-evenly;
}

.main-menu__item {
    display: inline-block;
    padding: 0 1rem;
}

.main-menu__link {
    color: lightcoral;
    text-transform: uppercase;
    text-decoration: none;
    letter-spacing: 2px;
    line-height: 4rem;
    padding: 0.5rem 0;
}

.main-menu__link--active {
    border-bottom: 4px solid;
    /** como vemos, hereda el color -lightcoral- de la class main-menu__link **/
    /** Esta es una de las ventajas de usar modificadores **/
}

.buttons {
    display: flex;
    justify-content: space-evenly;
}

.button {
    padding: .5rem .8rem;
    border-radius: 10px;
    border: none;
    outline: none;
    background-color: lightcoral;
    color: antiquewhite;
    text-transform: uppercase;
    margin-bottom: 2rem;
}

.button--dark {
    background-color: black;
}

.button--red {
    background-color: red;
    color: #000;
}

.button--ghost {
    background-color: transparent;
    border: 1px solid;
}

.button--blue {
    background-color: royalblue;
}

.button--block {
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 90%;
}

.img-container {
    position: relative;
    margin: 2rem auto;
    overflow: hidden;
    border: 1px solid #333;
}

.img-container::after,
.img-container::before {
    /* prop content es obligatoria. Siempre ponerla aunque swea vacía */
    content: '';
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    transition: transform 0.3s;
}

.img-container::before {
    /* background-color: rgba(0, 0, 0, 0.6); */
    backdrop-filter: blur(10px);
}

.img-container::after {
    content: 'Gato Pidiendo Comida';
    display: flex;
    justify-content: center;
    align-items: center;
    color: aliceblue;
    font-size: 2rem;
}

/* EFECTO 1 */
.img-container--scale::after,
.img-container--scale::before {
    transform: scale(0);
}

.img-container:hover.img-container--scale::after,
.img-container:hover.img-container--scale::before {
    transform: scale(1);
}

/* EFECTO 2 */
.img-container--left::after,
.img-container--left::before {
    transform: translateX(-100%);
}

.img-container:hover.img-container--left::after,
.img-container:hover.img-container--left::before {
    transform: translateX(0);
}

/* EFECTO 3 */
.img-container--bottom::after,
.img-container--bottom::before {
    transform: translateY(100%);
}

.img-container:hover.img-container--bottom::after,
.img-container:hover.img-container--bottom::before {
    transform: translateY(0);
}

/** ::after y ::before (pseudoelementos) no se admiten en las imagenes**/
/* no es ni block ni inline ni inline-block */
.img {
    display: block;
    margin-left: auto;
    margin-right: auto;
}